Opsero Electronic Design Inc. 2020
Jeff Johnson
DP83867 SGMII CLK enable patch 2020.1
=====================================
This patch modifies the driver for DP83867 Gigabit Ethernet PHY so that it will accept
one extra property:
* ti,dp83867-sgmii-autoneg-dis: When added to the GEM node, this will disable the SGMII 
  autonegotiation feature when the PHY is configured (eg. ipconfig eth0 up)

Since 2020.1, the DP83867 driver will only configure the PHY for SGMII if the phy-mode
property (PHY interface) in the device tree is set to "sgmii". In earlier versions,
it would assume SGMII if phy-mode was not set to "rgmii". In our case, we cannot set
phy-mode to "sgmii" because that would cause the MACB driver to set the SGMIIEN and
PCSSEL bits in the GEM. Instead, we keep using phy-mode="gmii" and we modify the DP83867
driver such that it doesn't require phy-mode="sgmii" to configure for SGMII.

diff --git a/drivers/net/phy/dp83867.c b/drivers/net/phy/dp83867.c
index 9c5acc6..746b630 100644
--- a/drivers/net/phy/dp83867.c
+++ b/drivers/net/phy/dp83867.c
@@ -130,6 +130,7 @@ struct dp83867_private {
 	bool set_clk_output;
 	u32 clk_output_sel;
 	bool sgmii_ref_clk_en;
+	bool sgmii_autoneg_dis;
 };
 
 static int dp83867_ack_interrupt(struct phy_device *phydev)
@@ -218,6 +219,9 @@ static int dp83867_of_init(struct phy_device *phydev)
 	dp83867->rxctrl_strap_quirk = of_property_read_bool(of_node,
 					"ti,dp83867-rxctrl-strap-quirk");
 
+	dp83867->sgmii_autoneg_dis = of_property_read_bool(of_node,
+					"ti,dp83867-sgmii-autoneg-dis");
+
 	dp83867->sgmii_ref_clk_en = of_property_read_bool(of_node,
 					"ti,sgmii-ref-clock-output-enable");
 
@@ -388,7 +392,7 @@ static int dp83867_config_init(struct phy_device *phydev)
 			       DP83867_IO_MUX_CFG_IO_IMPEDANCE_MASK,
 			       dp83867->io_impedance);
 
-	if (phydev->interface == PHY_INTERFACE_MODE_SGMII) {
+	if (phy_interface_is_rgmii(phydev) == 0) {
 		/* For support SPEED_10 in SGMII mode
 		 * DP83867_10M_SGMII_RATE_ADAPT bit
 		 * has to be cleared by software. That
@@ -435,6 +439,15 @@ static int dp83867_config_init(struct phy_device *phydev)
 			 MII_DP83867_CFG2_SPEEDOPT_ENH |
 			 MII_DP83867_CFG2_SPEEDOPT_CNT |
 			 MII_DP83867_CFG2_SPEEDOPT_INTLOW);
+
+		/* This disables the SGMII autoneg feature of the DP83867
+		 * when the "ti,dp83867-sgmii-autoneg-dis" parameter is found
+		 * in the phy node of the device tree.
+		 */
+		if (dp83867->sgmii_autoneg_dis) {
+			cfg2 &= ~MII_DP83867_CFG2_SGMII_AUTONEGEN;
+		}
+
 		phy_write(phydev, MII_DP83867_CFG2, cfg2);
 
 		phy_write_mmd(phydev, DP83867_DEVADDR, DP83867_RGMIICTL, 0x0);
